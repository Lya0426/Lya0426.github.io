<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lya0426.github.io</id>
    <title>Lya</title>
    <updated>2023-03-21T03:21:07.293Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lya0426.github.io"/>
    <link rel="self" href="https://lya0426.github.io/atom.xml"/>
    <subtitle>我辈皆矩火，复民族荣光！</subtitle>
    <logo>https://lya0426.github.io/images/avatar.png</logo>
    <icon>https://lya0426.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Lya</rights>
    <entry>
        <title type="html"><![CDATA[装机配置]]></title>
        <id>https://lya0426.github.io/zhuang-ji-pei-zhi/</id>
        <link href="https://lya0426.github.io/zhuang-ji-pei-zhi/">
        </link>
        <updated>2023-03-07T03:19:58.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>配件</th>
<th>品牌</th>
<th>价格</th>
</tr>
</thead>
<tbody>
<tr>
<td>机箱</td>
<td>超频三蜂鸟I100 PRO-C + PCI3.0</td>
<td>295</td>
</tr>
<tr>
<td>主板</td>
<td>铭瑄H610ITX 挑战者</td>
<td>517</td>
</tr>
<tr>
<td>CPU</td>
<td>I5-12400F</td>
<td>836.58</td>
</tr>
<tr>
<td>网卡</td>
<td>AX210</td>
<td>69.42</td>
</tr>
<tr>
<td>显卡</td>
<td>七彩虹战斧2060s 矿</td>
<td>1090</td>
</tr>
<tr>
<td>内存</td>
<td>金百达 DDR4 银爵 3200 8*2</td>
<td>209</td>
</tr>
<tr>
<td>硬盘</td>
<td>铠侠RC20 1T</td>
<td>339</td>
</tr>
<tr>
<td>散热</td>
<td>利民 AXP90 X53</td>
<td>149.9</td>
</tr>
<tr>
<td>电源</td>
<td>先马 金钻500M</td>
<td>336</td>
</tr>
<tr>
<td>显示屏</td>
<td>NTA N2423FW</td>
<td>387</td>
</tr>
<tr>
<td>机箱风扇1</td>
<td>TL-C12015B</td>
<td>52</td>
</tr>
<tr>
<td>机箱风扇2</td>
<td>惠尔德冰魂F8010</td>
<td>24.9</td>
</tr>
<tr>
<td>总计</td>
<td></td>
<td>4305.8</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ES简介]]></title>
        <id>https://lya0426.github.io/es-jian-jie/</id>
        <link href="https://lya0426.github.io/es-jian-jie/">
        </link>
        <updated>2023-02-28T02:57:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="es">ES</h1>
<h2 id="一-es是什么">一、ES是什么</h2>
<p>Elasticsearch（简称ES）是一个基于<a href="https://so.csdn.net/so/search?q=Apache&amp;spm=1001.2101.3001.7020">Apache</a> Lucene(TM)的开源搜索引擎，无论在开源还是专有领域，Lucene可以被认为是迄今为止最先进、性能最好的、功能最全的搜索引擎库。</p>
<p>但是，Lucene只是一个库。想要发挥其强大的作用，你需使用Java并要将其集成到你的应用中。Lucene非常复杂，你需要深入的了解检索相关知识来理解它是如何工作的。</p>
<p>Elasticsearch也是使用Java编写并使用Lucene来建立索引并实现搜索功能，但是它的目的是通过简单连贯的RESTful API让全文搜索变得简单并隐藏Lucene的复杂性。</p>
<p>不过，Elasticsearch不仅仅是Lucene和全文搜索引擎，它还提供：</p>
<ul>
<li>
<p>分布式的实时文件存储，每个字段都被索引并可被搜索</p>
</li>
<li>
<p>实时分析的分布式搜索引擎</p>
</li>
<li>
<p>可以扩展到上百台服务器，处理PB级结构化或非结构化数据</p>
</li>
</ul>
<p>而且，所有的这些功能被集成到一台服务器，你的应用可以通过简单的RESTful API、各种语言的客户端甚至命令行与之交互。上手Elasticsearch非常简单，它提供了许多合理的缺省值，并对初学者隐藏了复杂的搜索引擎理论。它开箱即用（安装即可使用），只需很少的学习既可在生产环境中使用。Elasticsearch在Apache 2 license下许可使用，可以免费下载、使用和修改。</p>
<p>随着知识的积累，你可以根据不同的问题领域定制Elasticsearch的高级特性，这一切都是可配置的，并且配置非常灵活。</p>
<h2 id="二-es的核心概念">二、ES的核心概念</h2>
<h3 id="near-realtime-接近实时">Near Realtime 接近实时</h3>
<p>接近实时，有两层意思：</p>
<ul>
<li>从写入数据到数据可以被搜索到有一个小延迟（大概是 1s）</li>
<li>基于 ES 执行搜索和分析可以达到秒级</li>
</ul>
<h3 id="cluster-集群">Cluster 集群</h3>
<p>集群包含多个节点，每个节点属于哪个集群都是通过一个配置来决定的，对于中小型应用来说，刚开始一个集群就一个节点很正常。</p>
<h3 id="node-节点">Node 节点</h3>
<p>Node 是集群中的一个节点，节点也有一个名称，默认是随机分配的。默认节点会去加入一个名称为 <code>elasticsearch</code> 的集群。如果直接启动一堆节点，那么它们会自动组成一个 elasticsearch 集群，当然一个节点也可以组成 elasticsearch 集群。</p>
<h3 id="document-field">Document &amp; field</h3>
<p>文档是 ES 中最小的数据单元，一个 document 可以是一条客户数据、一条商品分类数据、一条订单数据，通常用 json 数据结构来表示。每个 index 下的 type，都可以存储多条 document。一个 document 里面有多个 field，每个 field 就是一个数据字段。</p>
<pre><code class="language-json">{
    &quot;product_id&quot;: &quot;1&quot;,
    &quot;product_name&quot;: &quot;iPhone X&quot;,
    &quot;product_desc&quot;: &quot;苹果手机&quot;,
    &quot;category_id&quot;: &quot;2&quot;,
    &quot;category_name&quot;: &quot;电子产品&quot;
}
</code></pre>
<h3 id="index">Index</h3>
<p>索引包含了一堆有相似结构的文档数据，比如商品索引。一个索引包含很多 document，一个索引就代表了一类相似或者相同的 document。</p>
<h3 id="type">Type</h3>
<p>类型，每个索引里可以有一个或者多个 type，type 是 index 的一个逻辑分类，比如商品 index 下有多个 type：日化商品 type、电器商品 type、生鲜商品 type。每个 type 下的 document 的 field 可能不太一样。</p>
<h3 id="shard">shard</h3>
<p>单台机器无法存储大量数据，ES 可以将一个索引中的数据切分为多个 shard，分布在多台服务器上存储。有了 shard 就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。每个 shard 都是一个 lucene index。</p>
<h3 id="replica">replica</h3>
<p>任何一个服务器随时可能故障或宕机，此时 shard 可能就会丢失，因此可以为每个 shard 创建多个 replica 副本。replica 可以在 shard 故障时提供备用服务，保证数据不丢失，多个 replica 还可以提升搜索操作的吞吐量和性能。primary shard（建立索引时一次设置，不能修改，默认 5 个），replica shard（随时修改数量，默认 1 个），默认每个索引 10 个 shard，5 个 primary shard，5 个 replica shard，最小的高可用配置，是 2 台服务器。</p>
<p>这么说吧，shard 分为 primary shard 和 replica shard。而 primary shard 一般简称为 shard，而 replica shard 一般简称为 replica。</p>
<p>![加载失败]（https://raw.githubusercontent.com/lya0426/PicBed_PicGo/master/MyPic/es-cluster-0.png）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[搭建简易博客]]></title>
        <id>https://lya0426.github.io/da-jian-jian-yi-bo-ke/</id>
        <link href="https://lya0426.github.io/da-jian-jian-yi-bo-ke/">
        </link>
        <updated>2023-02-27T09:24:57.000Z</updated>
        <content type="html"><![CDATA[<h1 id="搭建简易博客">搭建简易博客</h1>
<h2 id="一-搭建博客的前期准备">一、搭建博客的前期准备</h2>
<h3 id="1-注册github账号">1、注册Github账号</h3>
<p>打开Github官网，使用邮箱注册Github账号，注册时<strong>请谨慎设置自己的用户名</strong>，因为用户名后面会成为<strong>博客域名</strong>的一部分。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYSlrKf2ibcTzNTJiazWgedibicldQbrnBg0ZGEAw430WicIbkfE2LMLOsvZA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
获得了Github账号后，点击左侧的<strong>Create a repository</strong>，创建一个仓库，用于存放博客的相关数据。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYtyctlDY6HoVBRqg4yw5Ql8ibiaRRS15E16FzyxWqpRj3VLib9uuRniblAA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
在设置仓库名称时，它的格式是固定的，采用「<strong>用户名.github.io</strong>」的格式，因为这个仓库名称就是<strong>博客的域名</strong>(地址)。<br>
如下图，我的用户名为angola95，因此仓库名为「angola95.github.io」。<br>
设置好仓库名称后，勾选<strong>Initialize this repository with a README</strong>，最后点击底部的<strong>Create repository</strong>，就完成了仓库的创建。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYlAfsnHSOUVSRxQHe2LX00YMLHdI8XKno0iafmia2eOmibDkHUt7FebYBA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
创建好仓库后，点击右上方的账号头像，选择<strong>Settings</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYpSibBtaIGnKnsnDzqBUFLg2Hib0r7s6Kh7JYn6f7RK4QkRLxfFjcwgSA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
在设置菜单中，按照<strong>Developer settings--Personal access tokens</strong>的路径进入，点击右上方的<strong>Generate new token</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_gif/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYa7daniaS6TgDVg3Nndo9Ig5Pwq5vbOgj5bTMvpZKKy4Vq1ICO0YK1uw/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="图片" loading="lazy"><br>
在New token设置页面，Note输入对Token的描述或备注，勾选下方的<strong>repo</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYEwPmiaed7y5GM3KH7iaUIlMAaTFPtkkkKHnkib1EL5t1buMgckev5RRNg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
最后将页面拉至底部，点击<strong>Generate token</strong>，就会生成一串由数字和字母组成的字符，这就是刚刚生成的<strong>Token</strong>。<br>
有的小伙伴可能会问，这个生成的Token有什么用？请接着往下看，你可能就明白了。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvY50MjnmCzicOpJPdVMFUCQg7ygaPdgEKGUCFBVRBbKo9uib3717D8tv3g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"></p>
<h3 id="2-安装git">2、安装Git</h3>
<p>Git是一个<strong>分布式版本控制软件</strong>，方便多个开发者同时为一个项目贡献代码，彼此间互不影响，大大提高了团队合作的效率。<br>
Git的数据库分为<strong>远端数据库和本地数据库</strong>，我们在Github上创建的仓库，可以看成是博客的远端数据库，而本地数据库就是我们使用的电脑。<br>
使用Git，能将我们在本地电脑写的博客内容，自动地推送到远端的Github上，而连接本地和远端数据库的桥梁，就是前面生成的<strong>Token</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYic0tYGlIUYkoJCXVEdQicI56cNkQYzyGvXc8dBexFd12pgtuNHYgiaDSA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
Git支持<strong>Win、macOS和Linux</strong>三大平台，下载之后，它的安装方法与普通软件一样，更换软件安装位置之后，一直点击下一步，直至开始安装。</p>
<h3 id="3-安装博客写作客户端">3、安装博客写作客户端</h3>
<p>Gridea是一个静态的博客写作客户端，它提供了免费和收费的<strong>博客主题</strong>，通过应用不同的主题，可以让原本简陋的博客更有<strong>设计感</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvY7kqZZsiciaBI8hJiaKiac4lqVYTicKaicsj6DmElGEjzuy3uYWuYpqXC2D6w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
安装了Gridea后，需要先进行一定的配置。<br>
在配置页面中，Platform选择<strong>Github Pages</strong>，分支填写<strong>master</strong>，其他选项则根据个人信息进行填写。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvY8Ld7cP5YcibyPibOUics9jGWxs9Vq0lJdTkN1jt7XgXKbGfUad6C1PMicA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
填写好信息，先点击<strong>保存</strong>，接着点击<strong>检测远程连接</strong>，查看是否连接成功。<br>
若提示远程连接失败，解决方法可参考Gridea官方给出的文档：<br>
<em>https://dwz.cn/K9DdtABB</em></p>
<h2 id="二-开始写第一篇博客">二、开始写第一篇博客</h2>
<p>完成上面的工作后，就算完成了博客的搭建，接下来你就可以开始写自己的第一篇博客了。</p>
<h3 id="1-markdown编辑器">1、Markdown编辑器</h3>
<p>Typora，是一个<strong>免费的Markdown客户端软件</strong>，支持Win、macOS和Linux三个平台。<br>
Typora虽然没有马克飞象并排的实时预览窗口，但它也是<strong>所见即所得</strong>的，输入Markdown的标记符号后，就能马上看到最终的效果。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_gif/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYwVqnAibgd15bnbzxKiaa40fsvmybVvAcIs062y1Sq8tq3iaB3ANCVzIkw/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="图片" loading="lazy"><br>
使用Markdown写文章，有时需要将文章发送给他人查看，若对方没有用过Markdown，你直接发送一份Markdown文件过去，会让别人一脸懵逼，也不便于多人间的协作。<br>
而Typora也为我们考虑到了这一点，在导出中，有<strong>多种文件格式</strong>可以选择，如最为常见的<strong>PDF、Word和图片</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvY4uj2iapesjA3fxthw7YfvSInrV1iaYvuiclPs50gs9DcCr5p7RdTguYuw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"></p>
<h3 id="2-markdown图床">2、Markdown图床</h3>
<p>在Markdown中，使用的图片都是通过链接的形式添加到文章中的，下图中的图片就是使用https开头的链接引用到Markdown中的。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYJUpyrtq4zaDf25srwmEQTic4Zg4sJpHGZC1pAiaPhNu16wOrKactoOOg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
图片通过链接进行引用，这就需要我们先将图片上传到<strong>服务器</strong>中，在网上用于存放图片的服务器，叫做「<strong>图床</strong>」。<br>
若你觉得图床比较陌生，也可以将图床理解为<strong>网络相册</strong>，如QQ空间相册、微博相册等，我们发布在QQ或微博的照片，其实就是存放在了腾讯和新浪的服务器上。<br>
网络上的图床有免费和收费两种，为最低成本地搭建一个博客，我选择使用免费的图床，而这个图床刚好就是文章最开始提到的<strong>Github</strong>。</p>
<h3 id="3-图片上传工具picgo">3、图片上传工具PicGo</h3>
<p>为方便将电脑本地的图片上传到Github，我们需要安装一个<strong>图片上传工具</strong>——<strong>PicGo</strong>。<br>
使用PicGo上传到Github的图片，它会返回图片对应的链接，接着你将链接粘贴到使用Markdown写的博客中，图片就可以正常显示了。<br>
PicGo是由一位个人开发者@PiEgg 开发的<strong>免费</strong>图片上传工具，支持Win、macOS和Linux三大平台。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYiaxNmqaSt84IX1WwC7g7oqE6oNxLBVPiarqx1pj9Tfic6Occdic5MUJDJQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
安装了PicGo后，需要先对软件进行一定的设置：<br>
点击<strong>图片上传</strong>右下角的箭头，选择<strong>Github图床</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYYyCbzsjx7Tc6y8eVYcvHpaUZm3tFvmiaA86CLlNn1nByuKB3lymYWsQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
点击左侧边栏的图床设置，选择Github图床，进入Github图床的设置界面。<br>
在Github设置中，需要填写的信息有<strong>仓库名、分支名和Token</strong>等，这些信息在提示我们得去Github<strong>新建一个用作图床的仓库</strong>。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYuXMciaZslxLj4oKMicx3kksjRlSEdNJibb1U1rvxt5pxulpm4bmYIx6KA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
下图是我新建的用作图床的仓库，创建方法与前面介绍的创建仓库操作基本一致，这里不再赘述。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYJdbibO2veHv9WicLic7OwLmsHaqdmkKXbyn1TfmZxRLITacAIelSibXg9w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
创建好图床的仓库后，我们还需要创建一个<strong>新的Token</strong>，用于<strong>连接PicGo与图床仓库</strong>，创建Token的方法，前面也有介绍过。<br>
完成新仓库和Token的创建后，我们回到PicGo的配置界面，按照下图填入相关信息。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYibxZaBgbl0qKBW8OLr8ZDuv9hIk03bcfvUoLKnmA89vE3J7rXsI7wWw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
*<em>对上图的说明：</em><br>
仓库名：格式为 Github用户名/仓库名；<br>
分支名：设置为 master；<br>
设定自定义域名：格式为<em>https://raw.githubusercontent.com/Github用户名/仓库名/master</em>，前面的部分都是固定的，后面的Github用户名和仓库名根据个人情况进行替换。<br>
完成以上设置后，点击下方的确定按钮，若配置的信息正确，在Win10系统右下角会弹出设置成功的通知。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYNubhtue6Jg5lSuchzLfN1oibAcagoogHfB2gCzPYDGBYHah0uBkhffg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
返回到PicGo的上传区，将你想上传到的图片拖拽到上传区，待图片完成上传，软件会在桌面右下角弹出上传成功的通知。<br>
通知附带了图片上传到Github的链接，点击通知面板，就会将链接保存到复制到系统的剪贴板中。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_gif/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYfoGEALalb7aIx8Ek8vxWBTgM8sf8KRntEX9XuvqLjWyeg0ich9LdKgg/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="图片" loading="lazy"><br>
此时再回到Typora，将剪贴板中的图片链接粘贴到文章中，就完成了博客图片的添加。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_gif/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYUURmqbkJPV9SSgJMECW202b24QGMicKpK3phm0g1jJWDkTpcvhyCb1g/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="图片" loading="lazy"></p>
<p><strong>PicGo下载地址：</strong><br>
<em>https://dwz.cn/sNQWdAfG</em></p>
<h2 id="三-发布你的第一篇博客">三、发布你的第一篇博客</h2>
<p>至此，完成了前面较为繁琐的操作后，你就可以正式发布自己的第一篇博客了。<br>
在博客客户端Gridea中，点击左下角的<strong>预览</strong>按钮，可以预览保存在本地的博客，预览后未发现问题的话，就可以点击下方的<strong>同步</strong>按钮，将保存到本地的博客推送到Github上。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYtgSP0J4vUKeTlDge1hxNUZ51OIxISJUNSMxDjianQ5cyCic2s9ER4cUg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
完成同步后，在浏览器中输入最开始创建的仓库的名称，由于最开始我将仓库名称设置为angola95.github.io，因此在浏览器输入这个地址，就能打开我的个人博客了。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_png/WdqAMJxDC6oCQYpmrR4Gjle77hS5dmvYtX2xRz0hWLS0WbIjC1fdvxgzhtdZ0FDgq074ibq2EZkFbFo5yFTzMbw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"></p>
<h2 id="四-写在最后">四、写在最后</h2>
<p>使用本文介绍的方法搭建博客，有两个<strong>好处</strong>，一是不需要花时间学习搭建博客所需的技术，对新手比较友好；二是搭建的博客完全免费，不需要担心服务器到期访问不了。<br>
当然，这个方法也存在一些<strong>不足</strong>：由于Github是个国外的网站，若博客中添加的图片过大，加载的时间会延长。<br>
对比了这个方法存在的利弊，我最终还是选择了它。<br>
除了本文介绍的搭建博客的方法，网上还有很多其他方法，感兴趣的小伙伴可以自行搜索。<br>
以上，就是本次想和你分享的零基础零成本搭建博客的方法。<br>
希望对你有帮助，我们下次见。</p>
]]></content>
    </entry>
</feed>